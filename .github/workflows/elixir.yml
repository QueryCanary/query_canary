name: Elixir CI

on:
  push:
    branches: ["main"] # adapt branch for project
  pull_request:
    branches: ["main"] # adapt branch for project

env:
  MIX_ENV: test

permissions:
  contents: read

jobs:
  test:
    services:
      db:
        image: postgres:12
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root_pass
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_pass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root --password=root_pass"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      clickhouse:
        image: clickhouse/clickhouse-server:25.5
        env:
          CLICKHOUSE_DB: test_db
          CLICKHOUSE_USER: test_user
          CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
          CLICKHOUSE_PASSWORD: test_pass
        ports:
          - 8123:8123
        options: >-
          --health-cmd="clickhouse-client --query 'SELECT 1'"
          --health-interval=5s
          --health-timeout=2s
          --health-retries=10

    runs-on: ubuntu-latest
    name: Test on OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        otp: ["27.3.3"]
        elixir: ["1.18.3"]
    steps:
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache deps
        id: cache-deps
        uses: actions/cache@v3
        env:
          cache-name: cache-elixir-deps
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-

      - name: Cache compiled build
        id: cache-build
        uses: actions/cache@v3
        env:
          cache-name: cache-compiled-build
        with:
          path: _build
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-
            ${{ runner.os }}-mix-

      - name: Install dependencies
        run: mix deps.get

      - name: Compiles without warnings
        run: mix compile --warnings-as-errors

      - name: Check Formatting
        run: mix format --check-formatted

      # Step: Execute the tests.
      - name: Run tests
        run: mix test

      - name: Seed adapter test databases
        run: |
          PGPASSWORD=postgres psql -h localhost -U postgres -d postgres -c "CREATE DATABASE test_db;"
          PGPASSWORD=postgres psql -h localhost -U postgres -d test_db -f test/support/adapters/postgresql-seed.sql
          mysql -h 127.0.0.1 -uroot -proot_pass -e "CREATE DATABASE IF NOT EXISTS test_db;"
          mysql -h 127.0.0.1 -P 3306 -u test_user -ptest_pass test_db < test/support/adapters/mysql-seed.sql

      - name: Run database adapter tests
        run: mix test --only database_adapters
